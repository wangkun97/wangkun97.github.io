{"meta":{"title":"SkyWang","subtitle":"无波真古井，有节是秋筠","description":"love and peace","author":"kun wang","url":"http://yoursite.com","root":"/"},"pages":[{"title":"Gallery","date":"2019-07-27T04:40:12.000Z","updated":"2019-07-27T04:42:52.296Z","comments":true,"path":"gallery/index.html","permalink":"http://yoursite.com/gallery/index.html","excerpt":"","text":"melody background demo1 demo2 demo3 No title"},{"title":"标签","date":"2019-07-27T04:37:29.000Z","updated":"2019-07-27T04:38:39.583Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-07-27T04:39:09.000Z","updated":"2019-07-27T04:39:49.424Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-07-27T04:42:09.000Z","updated":"2019-07-27T04:43:33.205Z","comments":true,"path":"link/index.html","permalink":"http://yoursite.com/link/index.html","excerpt":"","text":""}],"posts":[{"title":"kali模块2","slug":"kali模块2","date":"2019-08-17T10:15:51.000Z","updated":"2019-08-17T10:20:00.918Z","comments":true,"path":"2019/08/17/kali模块2/","link":"","permalink":"http://yoursite.com/2019/08/17/kali模块2/","excerpt":"","text":"irpas-ass使用详解 主动模式 主动发路由协议包 ass -i eth0 -A 被动模式 侦听路由协议的广播或者组播包优点是隐蔽 ass -i eth0 -S 指定源地址 -D 制定目标地址 -P 制定协议 互联网拒绝服务攻击 使用相邻AS地址攻击目标 路径追踪 Public AS lft -A IP lft -A 192.168.1.1 //查询路由器隶属于哪个ASlft -A www.baidu.com miranda 针对 UPnP 协议的扫描和攻击工具 Universal Plug and Play是一组网络协议 适用于家庭网络（无企业级产品）便于设备间无缝发现和链接，建立基本的家庭网络服务(热插拔) 文件共享、通信、娱乐IGD、打印机、智能电话、网络摄像头、电视盒子、洗衣机等 SSDP: Simple Service Discovery Protocol GENA: Generic Event Notification Architecture SOAP: Simple Object Access Protocol XML: Extensible Markup Language UPnP 基于IP的通信协议 无任何身份验证机制 大部分路由器支持UPnP且默认启动 大量设备可利用UPnP修改配置 爆破路由器密码不是好主意，UPnP才是 修改DNS配置、修改密码、端口转发、动态DNS 重启设备、窃取PPPoE账号、查看或修改无线配置 UPnP工作过程 获取地址(默认基于IP协议) Discovery REQUEST: M-SEARCH(239.255.255.250/UDP 1900) RESPONSE: 单播回包、包含 XML URL (Location 头) NOTIFY 通告自己的存在，239.255.255.250 /UDP 1900 包含 XML URL (Location 头) HTTP over UDP Description 读取XML文件的内容 Device Service Action Variable Control Device + service + action + Variable 以上通信使用SOAP请求实现(发包实现UPnP通信，实现对设备的利用) miranda说明 主动 / 被动 发现、查询、管理UPnP设备 基于python开发 独立的命令行界面 命令行自动tab补齐、命令历史 定制 SSDP 头 定制网卡、IP、端口 seti show seti iface seti socket 239.255.255.250:190 msearch 主动(发包SSDP Request) pcap 被动(嗅探Notify) host list 查看发现的UPnP设备列表(索引) host get 0 查询设备类型、服务、action host info 0 显示查询到的信息内容 host summary 0 显示 xml 文件摘要内容 save info 0 file 保存结果信息(data / load) Nmap Host discovery(主机发现) Service/version detection(服务于版本检测) Operating system detection(操作系统检测) Network traceroute(网络追踪) Nmap Scripting Engine(NMAP脚本引擎) 几种指定目标的方法#Ahost为写有IP的文件#127.0.0.1 代表IPnmap -sn 127.0.0.1 127.0.0.2nmap -sn 127.0.0.1-100nmap -sn -iL Ahostnmap -sn 127.0.0.1/24 -exclude 127.0.0.15nmap -sn 127.0.0.1/24 -excludefile Ahost TCP三次握手 SYN(同步序列号，请求建立连接) ACK(针对 SYN/FIN 的确认回答) FIN(请求切断连接) 1.客户端 发送 SYN 给服务端请求连接2.服务端接受请求，发送带有确认应答(ACK)和同步序列号(SYN)给客户端3.客户端再发送一个 ACK ，确认连接 TCP/UDP扫描#TCP SYN扫描nmap -sS IP地址nmap -sS 127.0.0.1#TCP Connect扫描nmap -sT IP地址nmap -sT 127.0.0.1#TCP FIN扫描nmap -sF IP地址nmap -sF 127.0.0.1#UDP扫描，扫描时间很长，扫描效果不好nmap -sU IP地址nmap -sU 127.0.0.1#以上都是普通端口扫描#扫端口尽量用 -sV 扫描，时间比较长nmap -sV 127.0.0.1#综合扫描nmap -A 127.0.0.1 安装与使用 Python NMAP#安装pip3 install python-nmap#使用，都是自己写的自动化脚本./nmap_ping_scan.py 192.168.100.1/24#Python实现NMAP自动化#先 Ping 后 A./nmap_A_ping_scan.py 192.168.100.1/24zip2john demo.zipzip2john demo.zip &gt; hash.txtjohn --format=zip hash.txtjohn hash.txt","categories":[],"tags":[{"name":"kali irpas-ass miranda nmap","slug":"kali-irpas-ass-miranda-nmap","permalink":"http://yoursite.com/tags/kali-irpas-ass-miranda-nmap/"}]},{"title":"kali模块","slug":"kali模块","date":"2019-08-17T10:03:12.000Z","updated":"2019-08-17T10:08:03.181Z","comments":true,"path":"2019/08/17/kali模块/","link":"","permalink":"http://yoursite.com/2019/08/17/kali模块/","excerpt":"","text":"arping详解arping安装apt install arpingarping原理#arp协议解析 IP地址到MAC地址 的对应关系 #arping发送ARP探测数据包APR缓存#arp缓存的缓存时间，间隔为60s cat /proc/sys/net/ipv4/neigh/default/gc_stale_time #丢包操作,arp缓存关与开，关掉导致效率低，但能避免故障发生 ip link set arp off dev eth0 #可能造成60s内无网状态，可能由于ip更换导致MAC地址不对应，缓存没有更新 ip link set arp on dev eth0 #查看arp缓存 arp -n命令解析 二层网络解析目标IP/MAC地址 默认每秒发一个请求 -i 指定发包网口 加快扫描速度 -w 发包间隔微妙，默认 1s-W 浮点数秒，间隔浮点数秒发送数据包 限定发包数量 -c 名称、IP、MAC -t / -T 目标 MAC/IP-s / -S 来源 MAC/IP-0 来源IP 0.0.0.0-b 来源IP 255.255.255.255-B -U 设置目标地址 刷新邻居的ARP缓存 -P 发 ARP reply 检测地址冲突 使用 arping 某一个 IP如果返回多个 MAC 地址表示此IP在局域网内冲突 基本使用arping IP地址 arping 192.168.1.1 arping IP地址 -w 发包微秒 -i 发包端口 -c 发包数量 arping 192.168.1.1 -w 1000 -i eth0 -c 10 arping IP地址 -W 浮点秒数 -i 发包端口 -c 发包数量 arping 192.168.1.1 -W 2.5 -i eth0 -c 10使用wiershark抓取arping发送的数据包arping IP -c 1 wiershark内的操作 eth.addr == MAC地址使用arping欺骗 先 arping 目标 IP,避免网络错误arping 192.168.1.1欺骗格式arping -s 虚假MAC地址 -S 本机IP 靶机IParping -s 00:11:22:33:44:55 -S 192.168.1.52 192.168.1.1本地arping命令不受arp欺骗影响，会自动改回被欺骗的MAC地址 ident-user-enum详解 ident service TCP / 113识别启动指定端口进程用户 命令 ident-user-enum 目标IP 探测端口 ident-user-enum 192.168.1.1 21 22 23 80 安装与开启ident服务 apt-get install ident2/ident3查询开启命令：netstat -pantu | grep 113开启：ident2一般不要安装这个服务","categories":[],"tags":[{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"}]},{"title":"STL标准模板库","slug":"我的第一篇博文","date":"2019-07-26T05:00:21.000Z","updated":"2019-07-26T10:06:40.414Z","comments":true,"path":"2019/07/26/我的第一篇博文/","link":"","permalink":"http://yoursite.com/2019/07/26/我的第一篇博文/","excerpt":"","text":"C++必读书籍 Essential C++ (由c过度到c++) C++ Primer第四版 (内容很全，但是不深) Effeetive C++ More Effeetive C++ C++ 标准程序库 深入探索 C++对象模型 over","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-07-26T04:53:30.372Z","updated":"2019-07-26T04:53:30.372Z","comments":true,"path":"2019/07/26/hello-world/","link":"","permalink":"http://yoursite.com/2019/07/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}